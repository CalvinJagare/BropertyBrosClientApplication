@page "/registeruser"
@using BropertyBrosApi2._0.DTOs
@inject IHttpClientFactory HttpClientFactory
@inject NavigationManager NavigationManager

<h3>Register</h3>

<EditForm Model="user" OnValidSubmit="HandleRegister" FormName="RegisterForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>First Name</label>
        <InputText @bind-Value="user.FirstName" class="form-control" />
        <ValidationMessage For="@(() => user.FirstName)" />
    </div>

    <div>
        <label>Last Name</label>
        <InputText @bind-Value="user.LastName" class="form-control" />
        <ValidationMessage For="@(() => user.LastName)" />
    </div>

    <div>
        <label>Email</label>
        <InputText @bind-Value="user.Email" class="form-control" />
        <ValidationMessage For="@(() => user.Email)" />
    </div>

    <div>
        <label>Password</label>
        <InputText @bind-Value="user.Password" type="password" class="form-control" />
        <ValidationMessage For="@(() => user.Password)" />
    </div>

    <button type="submit">Register</button>
</EditForm>

@code {
    private UserDto user = new();

    private async Task HandleRegister()
    {
        var client = HttpClientFactory.CreateClient("BropertyBrosApi2.0");
        var response = await client.PostAsJsonAsync("api/auth/register", user);

        if (response.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("/loginuser");
        }
        else
        {
            var content = await response.Content.ReadAsStringAsync();
            Console.WriteLine("Registration failed: " + content);
        }
    }
}