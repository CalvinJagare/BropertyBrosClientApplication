@page "/realtorlist"
@inject IRealtorService realtorService
@rendermode InteractiveServer
@*Author: Arlind*@

<div class="realtorlist-container mb-5">
    <h1 class="realtorlist-title text-center mb-4">Registered Realtors</h1>

    @if (isLoading)
    {
        <p class="text-center realtorlist-loading-text">Loading realtors...</p>
    }
    else if (realtors?.Count > 0)
    {
        <div class="row g-4">
            @foreach (var realtor in realtors)
            {
                <div class="col-md-6 col-lg-4">
                    <NavLink class="text-decoration-none" href="@($"/PersonalRealtorPage/{realtor.Id}")">
                        <div class="card shadow-sm h-100 realtorlist-card">
                            <img src="@realtor.ProfileUrl" class="card-img-top realtorlist-img" alt="Realtor Profile" />
                            <div class="card-body text-center">
                                <h5 class="realtorlist-card-title">@realtor.FirstName @realtor.LastName</h5>
                                <p class="realtorlist-card-text">
                                    <strong>Phone:</strong> @realtor.PhoneNumber<br />
                                    <strong>Email:</strong> <a href="mailto:@realtor.Email">@realtor.Email</a><br />
                                </p>
                            </div>
                        </div>
                    </NavLink>
                </div>
            }
        </div>

        <p class="text-center">@responseMessage</p>
    }
    else
    {
    }
</div>


@code {
    private List<Services.RealtorReadDto>? realtors;
    private bool isLoading = true;
    string? responseMessage;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            ApiResponse<List<RealtorReadDto>> response = await realtorService.GetAllRealtorsAsync();

            realtors = response.Data.ToList();
            responseMessage = response.Message;

            isLoading = false;
            StateHasChanged();
        }
    }
}
