@page "/users/login"
@using BropertyBrosClientApplication.Services
@using BropertyBrosClientApplication.Services.Auth
@using System.Diagnostics
@using System.ComponentModel.DataAnnotations
@inject IAuthService AuthService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<div class="d-flex justify-content-center align-items-center vh-100 bg-light">
	<div class="card shadow-sm p-4 login-card">
		<h3 class="text-center mb-4">Login</h3>
		<Microsoft.AspNetCore.Components.Forms.EditForm Model="LoginModel" OnValidSubmit="HandleLogin" FormName="Login">
			<DataAnnotationsValidator />
			<ValidationSummary class="text-danger validation-message" />

			<div class="form-floating mb-3">
				<InputText id="email" type="email" class="form-control" @bind-Value="LoginModel.Email" placeholder="Email" />
				<label for="email" class="form-label">Email</label>
				<ValidationMessage For="@(() => LoginModel.Email)" class="text-danger validation-message" />
			</div>

			<div class="form-floating mb-3">
				<InputText id="password" type="password" class="form-control" @bind-Value="LoginModel.Password" placeholder="Password" />
				<label for="password" class="form-label">Password</label>
				<ValidationMessage For="@(() => LoginModel.Password)" class="text-danger validation-message" />
			</div>

			<button type="submit" class="btn btn-primary w-100">Login</button>
		</Microsoft.AspNetCore.Components.Forms.EditForm>
	</div>
</div>


@code {
	LoginUserDto LoginModel = new LoginUserDto();

	private async Task HandleLogin()
	{
		string message = string.Empty;
		try
		{
			Debug.WriteLine($"LoginModel: {LoginModel.Email}, {LoginModel.Password}");
			var response = await AuthService.AuthAsync(LoginModel);

			if(response)
			{
				NavigationManager.NavigateTo("/");
				Debug.WriteLine($"Login successful: {response}");
			}
			message = "Invalid Credentials, please try again."; 
		}
		catch (ApiException aex)
		{
			if (aex.StatusCode >= 200 && aex.StatusCode <= 299)
			{
				NavigationManager.NavigateTo("/users/login");
			}
			message = aex.Response;
		}
	}
}
