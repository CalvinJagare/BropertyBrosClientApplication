@page "/updatecity"
@using BropertyBrosClientApplication.DTO.City
@using BropertyBrosClientApplication.Services
@inject CityService CityService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

@* Author: Arlind *@

<div class="d-flex justify-content-center align-items-center vh-100">
    <div class="container">
        <h1 class="dashboard-title text-center mb-4">Update City</h1>

        <div class="card shadow-sm p-4">
            @if (cities == null)
            {
                <p class="text-center">Loading cities...</p>
            }
            else
            {
                <div class="mb-3">
                    <label for="cityDropdown" class="form-label">Select a City</label>
                    <select id="cityDropdown" class="form-select" @bind="selectedCityId">
                        <option value="">-- Select a City --</option>
                        @foreach (var city in cities)
                        {
                            <option value="@city.Id">@city.CityName</option>
                        }
                    </select>
                </div>

                <div class="text-center mb-3">
                    <button class="btn btn-primary" @onclick="LoadCityDetails">
                        Select City
                    </button>
                </div>

                @if (selectedCity != null)
                {
                    <EditForm Model="selectedCity" OnValidSubmit="HandleValidSubmit">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <div class="mb-3">
                            <label for="cityName" class="form-label">City Name</label>
                            <InputText id="cityName" class="form-control" @bind-Value="selectedCity.CityName" />
                        </div>

                        <div class="text-center">
                            <button type="submit" class="btn btn-primary">Update</button>
                        </div>
                    </EditForm>
                }
                else if (selectedCityId != null)
                {
                    <p class="text-center">Please click "Select City" to load the details.</p>
                }
            }
        </div>
        <div class="text-center mt-3">
            <button class="btn btn-secondary" @onclick="GoBack">Back</button>
        </div>
    </div>
</div>

@code {
    private List<Services.CityReadDto>? cities;
    private int? selectedCityId;
    private Services.CityCreateDto? selectedCity;

    protected override async Task OnInitializedAsync()
    {
        cities = await CityService.GetAllCitiesAsync();
    }

    private async Task LoadCityDetails()
    {
        if (selectedCityId.HasValue)
        {
            var city = await CityService.GetCityByIdAsync(selectedCityId.Value);
            if (city != null)
            {
                selectedCity = new Services.CityCreateDto
                    {
                        CityName = city.CityName
                    };
            }
            else
            {
                selectedCity = null;
            }
        }
        else
        {
            selectedCity = null;
        }
    }

    private async Task HandleValidSubmit()
    {
        if (selectedCityId.HasValue && selectedCity != null)
        {
            await CityService.UpdateCityAsync(selectedCityId.Value, selectedCity);
            NavigationManager.NavigateTo("/cityoverview");
        }
    }

    private void GoBack()
    {
        NavigationManager.NavigateTo("/admindashboard");
    }
}

