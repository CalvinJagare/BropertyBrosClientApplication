@* Author: Nayab *@
@page "/TestPageGetRealtorFirm"
@using BropertyBrosClientApplication.DTO.RealtorFirm
@using BropertyBrosClientApplication.Services
@inject RealtorFirmService realtorFirmService
@rendermode InteractiveServer

<h1>Test Get Realtor Firm</h1>

@if (realtorFirms == null)
{
    <p>Loading...</p>
}
else
{
    <ul>
        @foreach (var r in realtorFirms)
        {
            <li>@r.CompanyName </li>
            <img src="@r.LogoUrl" />
        }
    </ul>
}

<h1>Get Realtor Firm by Id</h1>

<input type="number" @bind="realtorFirmId" placeholder="Enter Realtor Firm ID" />
<button class="btn btn-primary" @onclick="GetRealtorFirm">Get Realtor Firm</button>

@if (isLoading)
{
    <p>Loading...</p>
}
else if (realtorFirm != null)
{
    <div class="mt-3">
        <h2>Realtor Details</h2>
        <p><strong>ID:</strong> @realtorFirm.Id</p>
        <p><strong>Name:</strong> @realtorFirm.CompanyName</p>
        <img src="@realtorFirm.LogoUrl" />
    </div>
}
else if (hasTried && realtorFirm == null)
{
    <p>No realtor found with ID: @realtorFirmId</p>
}

@code {
    private List<RealtorFirmReadDto>? realtorFirms;
    private int realtorFirmId;
    private RealtorFirmReadDto? realtorFirm;
    private bool isLoading = false;
    private bool hasTried = false;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            realtorFirms = await realtorFirmService.GetAllRealtorFirmsAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading Realtor Firm: {ex.Message}");
        }
    }
    private async Task GetRealtorFirm()
    {
        isLoading = true;
        hasTried = true;
        realtorFirm = null;

        try
        {
            realtorFirm = await realtorFirmService.GetRealtorFirmByIdAsync(realtorFirmId);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

}
