@page "/testpageupdatecity"
@using BropertyBrosClientApplication.DTO.City
@using BropertyBrosClientApplication.Services
@inject CityService CityService
@rendermode InteractiveServer

@* Author: Arlind *@
<h1>Update City</h1>

<label>City ID:</label>
<input type="number" @bind="cityId" placeholder="Enter City ID" />
<button class="btn btn-info" @onclick="LoadCity">Load City</button>

@if (isLoading)
{
    <p>Loading...</p>
}
else if (cityToUpdate != null)
{
    <div class="mt-3">
        <label>City Name:</label>
        <input type="text" @bind="updatedCity.CityName" />
        <button class="btn btn-primary" @onclick="UpdateCity">Update</button>
    </div>
}
else if (hasTried && cityToUpdate == null)
{
    <p class="text-danger">City not found.</p>
}

@if (updateSuccess)
{
    <p class="text-success">City updated successfully!</p>
}

@code {
    private int cityId;
    private CityReadDto? cityToUpdate;
    private CityCreateDto updatedCity = new();
    private bool isLoading = false;
    private bool hasTried = false;
    private bool updateSuccess = false;

    private async Task LoadCity()
    {
        isLoading = true;
        hasTried = true;
        updateSuccess = false;
        cityToUpdate = null;
        updatedCity = new();

        try
        {
            cityToUpdate = await CityService.GetCityByIdAsync(cityId);

            if (cityToUpdate != null)
            {
                updatedCity.CityName = cityToUpdate.CityName;
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading city: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task UpdateCity()
    {
        try
        {
            await CityService.UpdateCityAsync(cityId, updatedCity);
            updateSuccess = true;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error updating city: {ex.Message}");
        }
    }
}
