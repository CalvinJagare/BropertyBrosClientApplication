@page "/testpage"
@using BropertyBrosClientApplication.DTO.CategoryDto
@using BropertyBrosClientApplication.Services
@inject CategoryService CategoryService
@rendermode InteractiveServer

@* Author: Calvin, AI *@
<h3>Read Page</h3>


<h1>Get All Categories</h1>
@if (categories == null)
{
    <p>Loading...</p>
}
else
{
    <ul>
        @foreach (var category in categories)
        {
            <li>@category.CategoryName</li>
        }
    </ul>
}

<h1>Get Category by Id</h1>

<input type="number" @bind="categoryId" placeholder="Enter Category ID" />
<button class="btn btn-primary" @onclick="GetCategory">Get Category</button>

@if (isLoading)
{
    <p>Loading...</p>
}
else if (category != null)
{
    <div class="mt-3">
        <h2>Category Details</h2>
        <p><strong>ID:</strong> @category.Id</p>
        <p><strong>Name:</strong> @category.CategoryName</p>
    </div>
}
else if (hastried && category == null)
{
    <p>No category found with ID: @categoryId</p>
}

@code {
    private List<CategoryReadDto>? categories;
    private int categoryId;
    private CategoryReadDto? category;
    private bool isLoading = false;
    private bool hastried = false;


    protected override async Task OnInitializedAsync()
    {
        categories = await CategoryService.GetAllCategoryAsync();
    }

    private async Task GetCategory()
    {
        isLoading = true;
        hastried = true;
        category = null;

        try
        {
            category = await CategoryService.GetCategoryByIdAsync(categoryId);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

}