@page "/updatecategory"
@using BropertyBrosClientApplication.DTO.CategoryDto
@using BropertyBrosClientApplication.Services
@using BropertyBrosClientApplication.Services.Category
@inject ICategoryService CategoryService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

@* Author: Calvin *@

<div class="d-flex justify-content-center align-items-center vh-100">
    <div class="container">
        <h1 class="dashboard-title text-center mb-4">Update Category</h1>

        <div class="card shadow-sm p-4">
            @if (categories == null)
            {
                <p class="text-center">Loading categories...</p>
            }
            else
            {
                <div class="mb-3">
                    <label for="categoryDropdown" class="form-label">Select a Category</label>
                    <select id="categoryDropdown" class="form-select" @bind="selectedCategoryId">
                        <option value="">-- Select a Category --</option>
                        @foreach (var category in categories)
                        {
                            <option value="@category.Id">@category.CategoryName</option>
                        }
                    </select>
                </div>

                <div class="text-center mb-3">
                    <button class="btn btn-primary" @onclick="LoadCategoryDetails">
                        Select Category
                    </button>
                </div>

                @if (selectedCategory != null)
                {
                    <EditForm Model="selectedCategory" OnValidSubmit="HandleValidSubmit">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <div class="mb-3">
                            <label for="categoryName" class="form-label">Category Name</label>
                            <InputText id="categoryName" class="form-control" @bind-Value="selectedCategory.CategoryName" />
                        </div>

                        <div class="text-center">
                            <button type="submit" class="btn btn-primary" @onclick="Updated">Update</button>
                        </div>
                    </EditForm>
                }
                else if (selectedCategoryId != null)
                {
                    <p class="text-center">Please click "Select Category" to load the details.</p>
                }
            }
        </div>
        <div class="text-center mt-3">
            <button class="btn btn-secondary" @onclick="GoBack">Back</button>
        </div>
    </div>
</div>

@code {
    private List<Services.CategoryReadDto>? categories;
    private int? selectedCategoryId;
    private Services.CategoryCreateDto? selectedCategory;
    private bool isFirstRender = true;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var response = await CategoryService.GetAllCategories();
            if (response.Success)
            {
                categories = response.Data;
                StateHasChanged();
            }
        }
    }

    private async Task LoadCategoryDetails()
    {
        if (selectedCategoryId.HasValue)
        {
            var response = await CategoryService.GetCategoryById(selectedCategoryId.Value);
            if (response.Success && response.Data != null)
            {
                selectedCategory = new Services.CategoryCreateDto
                    {
                        CategoryName = response.Data.CategoryName
                    };
            }
            else
            {
                selectedCategory = null;
            }
        }
        else
        {
            selectedCategory = null;
        }
    }

    private async Task HandleValidSubmit()
    {
        if (selectedCategoryId.HasValue && selectedCategory != null)
        {
            var response = await CategoryService.UpdateCategory(selectedCategoryId.Value, selectedCategory);
            if (response.Success)
            {
                NavigationManager.NavigateTo("/categoryoverview");
            }
        }
    }

    private void GoBack()
    {
        NavigationManager.NavigateTo("/admindashboard");
    }

    private void Updated()
    {
        NavigationManager.NavigateTo("/categoryoverview");
    }
}
